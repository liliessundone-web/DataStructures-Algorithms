Time Complexity: O(N*LogN)
Space Complexity: O(N)


class Solution {
public:
    int lastStoneWeight(vector<int>& stones) 
    {
        priority_queue <int> maxhp;

        for(int i=0;i<stones.size();i++)
        {
            maxhp.push(stones[i]);
        }

        while(maxhp.size()>1)
        {
            int a = maxhp.top();
            maxhp.pop();
            int b = maxhp.top();
            maxhp.pop();

            if(a>b) maxhp.push(a-b);
        }    

        if(maxhp.empty()) return 0;
        else return maxhp.top();
    }
};
