Time Complexity: O(N1+N2)
N1 = no.of nodes in linked list 1
N2 = no. of nodes in linked list 2
Space Complexity: O(1)

class Solution {
  public:
    Node* sortedMerge(Node* head1, Node* head2) 
    {
        // code here
        if(head1==NULL) return head2;
        if(head2==NULL) return head1;
        if(head1->data > head2->data) swap(head1,head2);
        Node* dummy = new Node(-1);
        Node* temp = dummy;
        temp->next = head1;
        temp = head1;
        head1 = head1->next;
        
        while(head1!=NULL && head2!=NULL)
        {
            if(head1->data <= head2->data)
            {
                temp->next = head1;
                temp = head1;
                head1 = head1->next;
            }
            else
            {
                temp->next = head2;
                temp=head2;
                head2 = head2->next;
            }
        }
        while(head1!=NULL)
        {
            temp->next = head1;
            temp = head1;
            head1= head1->next;
        }
        
        while(head2!=NULL)
        {
            temp->next = head2;
            temp = head2;
            head2= head2->next;
        }
        
        return dummy->next;
    }
};

